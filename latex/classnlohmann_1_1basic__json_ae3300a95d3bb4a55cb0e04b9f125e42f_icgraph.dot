digraph "nlohmann::basic_json::is_object"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="nlohmann::basic_json\l::is_object",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="return whether value is an object"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="nlohmann::basic_json::at",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a157868dfcf060bf67fa423bafbf27b57",tooltip="access specified object element with bounds checking"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="nlohmann::basic_json\l::contains",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a29333078b6e6cb76f2b5d12590bbf766",tooltip="check the existence of an element in a JSON object"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="nlohmann::basic_json\l::count",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a369cf24de07945494df32e8b61e47917",tooltip="returns the number of occurrences of a key in a JSON object"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="nlohmann::basic_json\l::emplace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#ae3866ccade11e7b73902169714363f21",tooltip="add an object to an object if key does not exist"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="nlohmann::basic_json\l::erase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a022404d92eb877a7ad5bfce198ef067a",tooltip="remove element from a JSON object given a key"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="nlohmann::basic_json\l::find",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#af4167275baa0b2da76cdc89b1117c300",tooltip="find an element in a JSON object"];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="nlohmann::basic_json\l::value",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#ab29a59d20767180d6d2fe4f5054dd245",tooltip="access specified object element with default value"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="nlohmann::basic_json\l::value",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a7a378b9282dd1f7eb9bfffea6d177bbe",tooltip="overload for a default value of type const char*"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="nlohmann::basic_json\l::insert",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#aab2bc544912cb3954b38ee76772c16d7",tooltip="inserts elements"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="nlohmann::basic_json\l::is_structured",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a5a53e5a09d9123bfeed6f664b1334f8c",tooltip="return whether type is structured"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="nlohmann::basic_json\l::merge_patch",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#ab68414151f2f3347a71c7a9984f1d72d",tooltip="applies a JSON Merge Patch"];
  Node12 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="nlohmann::basic_json\l::operator[]",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#ad983106f7d7fd6a03cf609a9641976f4",tooltip="access specified object element"];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="nlohmann::basic_json\l::push_back",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#affac3bab5efcb26cdcd0942d24ad0ab5",tooltip="add an object to an object"];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="nlohmann::basic_json\l::swap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a02f73d65a38b3f0450c992e8c337d522",tooltip="exchanges the values"];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="nlohmann::basic_json\l::update",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1basic__json.html#a6c02637be3d8bd730a14082cc05f7a85",tooltip="updates a JSON object from another object, overwriting existing keys"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
}
